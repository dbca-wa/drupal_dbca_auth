services:
  # Few helper methods combined together to follow OOP paradygm.
  webserver_auth_helper:
    class: Drupal\webserver_auth\WebserverAuthHelper
    arguments: ['@database']

  # Checking if users are logged in properly when session exists.
  webserver_auth.authentication.webserver_auth:
    class: Drupal\webserver_auth\Authentication\Provider\WebserverAuth
    arguments: ['@session_configuration', '@database', '@webserver_auth_helper']

    # We need this to be more prioritized than deault cookie provider since we don't need
    # cookie provider while this module enabled.
    tags:
      - { name: authentication_provider, provider_id: 'webserver_auth', priority: 1, global: TRUE }

  # checking that authinfo and doing different actions depending on that condition.
  webserver_auth.middleware:
    class: Drupal\webserver_auth\StackMiddleware\WebserverAuthMiddleware
    arguments: ['@session_configuration', '@webserver_auth_helper', '@module_handler', '@page_cache_request_policy']

    # Giving our middleware most priority to do early exit if needed.
    tags:
      - { name: http_middleware, priority: 10000 }

  # Route subscriber to alter user-releated routes, like, login/logout/register/etc.
  webserver_auth.route_subscriber:
    class: Drupal\webserver_auth\Routing\WebserverAuthRouteSubscriber
    tags:
      - { name: event_subscriber }


